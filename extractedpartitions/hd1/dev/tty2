login: Password: 
Login incorrect
login: Password: 
Login incorrect
login: Password: 
Login incorrect
login: Password: 
Login incorrect
login: Password: 
tty;

unsigned int inChar;

unsigned char *DUART1 = (unsigned char *)0xFE0000;
unsigned char *DUART2 = (unsigned char *)0xFE0040;
#define dmodea  1
#define dcloka  3
#define dstata	3
#define dcomma  5
#define ddataa  7

#define dauxcr  9
#define dinchg  9
#define dintmk 11
#define dintst 11
#define dctupr 13
#define dctlow 15

#define dmodeb 17
#define dclokb 19
#define dstatb 19
#define dcommb 21
#define ddatab 23

#define divect 25
#define diport 27
#define doport 27

#define CS_9600	0xBB	/*  9600 baud */
#define CS_19_2 0xCC	/* 19.2K baud */

main()
{
  register short i;
  int errnum;
  
  scr_clear();
  scr_home();

  *(DUART1 + dcomma) = 0x15;	/* mode 1, enable RX & TX */
  *(DUART1 + dcomma) = 0x05;	/* enable RX/TX */
  *(DUART1 + dmodea) = 0x13;	/* no RTS, no parity, 8 bits */
  *(DUART1 + dmodea) = 0x27;	/* RTS, 1 stop bit */
  *(DUART1 + dcloka) = CS_9600;
  
  while (true)
  {
    /* get a character from the console  */
    /* if (read(stdin, &inChar, 1) == 1) */
    inChar = getchar();
    {
      /* if it is not printable ASCII - show as HEX on the console */
      if ((inChar < ' ') || (inChar > 0x7A))
        printf ("%02X", inChar);
      
      /* if the user typed a lower case 'q' - exit */
      if (inChar != 'q')
      {
        *(DUART1 + ddataa) = inChar;  /* send to the serial port */
      }
      else
      {
        break;
      }
    }
  }

  /*  
  strcpy(c_dev, "/dev/tty1");
  if ((tty = open(c_dev, 0)) < 0)
  {
    errnum = errno;

    fprintf(stderr, "Value of errorno: %d\n", errnum);
    perror ("Error printed by perror");
    fprintf(stderr, "Can't open %s for read: %s\n", c_dev, strerror(errnum));

    exit(1);
  }

  fprintf (stderr, "/dev/tty1 opened\n");
  fprintf(tty, "Hello world\n");
  
  while (true)
  {
    if (read(stdin, &inChar, 1) == 1)
    {
      if (inChar != 0x1B)
      {
        fprintf (tty, "%c", inChar);
      }
      else
      {
        break;
      }
    }
    
    if (read(tty, &inChar, 1) == 1)
    {
    	fprintf (stdout, "%c", inChar);
    }
  }
    
  close(tty);
  */
}
